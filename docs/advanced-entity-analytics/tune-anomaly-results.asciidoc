[[tuning-anomaly-results]]
= Optimizing anomaly results

To gain clearer insights into real threats, you can tune the anomaly results. The following procedures help to reduce the number of false positives: 

* <<rarely-used-processes, Tune results for rare applications and processes>>
* <<define-rule-threshold>>

[float]
[[rarely-used-processes]]
== Filter out anomalies from rarely used applications and processes

When anomalies include results from a known process that only runs occasionally,
you can filter out the unwanted results.

For example, to filter out results from a housekeeping process, named
`maintenanceservice.exe`, that only executes occasionally you need to:

. <<create-filter-list>>
. <<add-job-filter>>
. <<clone-job, Clone and rerun the job>> (optional)

[float]
[[create-filter-list]]
//Make sure that fixing this typo doesn't affect any other references in the Security docset and elsewhere.
=== Create a filter list

. To begin creating a new filter, go to **Kibana**, then **Machine Learning** -> **Anomaly Detection** -> **Settings**.
. In the **Filter Lists** section, click **Create**. 
. On the Create new filter list page, complete the following:
.. Enter an ID to name the filter list.
.. (Optional) Provide a description for the filter list.
.. Specify the processes that you want to filter out from anomaly results. To do this, click *Add item*, then enter processes names in the text box. In the example below, the `maintenanceservice.exe` process is being added to a filter list that specifies processes to filter out from anomaly results.

+
[role="screenshot"]
image::filter-add-item.png[]
.. Click *Add* and then *Save*.

The new filter appears on the Filter Lists page, where you can add it to relevant jobs.

[float]
[[add-job-filter]]
=== Add the filter to the relevant job

. In Kibana, go to **Machine Learning** -> **Anomaly Detection** -> **Anomaly Explorer**.
. In the Job selection flyout, select the jobs for which you want to add a filter to. If the jobs don't have results, click **Edit job selection* to select other jobs.  
. Go Anomalies section of the Anomaly Explorer page and and navigate to the job results for which the filter is required. 
. In the **Actions** column, click the gear icon and then select **Configure rules**.
+
The Create Rule window displays.
+
[role="screenshot"]
image::rule-scope.png[]
. Select:
.. _Add a filter list to limit where the rule applies_.
.. The _WHEN_ statement for the relevant detector (`process.name` in our
example).
.. The _IS IN_ statement.
.. The filter you created as part of the <<create-fiter-list>> procedure.
+
TIP: For more information, see
{ml-docs}/ml-configuring-detector-custom-rules.html[Customizing detectors with custom rules].

. Click *Save* to save the filter to the job results.
+
NOTE: Changes to rules only affect new results. All anomalies found by the job
before the filter was added are still displayed.

[float]
[[clone-job]]
=== Clone and rerun the job

If you want to remove all the previously detected results for the process, you
must clone and run the cloned job.

IMPORTANT: Running the cloned job can take some time. Only run the job after you
have completed all job rule changes.

. In Kibana, go to *Machine Learning* -> *Anomaly Detection* -> *Jobs*.
. Navigate to the job for which you configured the rule. Optionally, expand the job row and go to the *JSON* tab to verify the configured filter appears under `custom rules` in the JSON code.
. In the *Actions* column, click the **All actions** menu (**...**), then select **Clone job**. The **Create job: Advanced** page is displays.
. Click **Next** until you get to the Job details page.
. Enter a job ID for the cloned job. We recommend creating a name that shows the new job is an iteration of the original one. For example, append a number or a username to the original job name, such as `windows-rare-network-process-2`.
+
[role="screenshot"]
image::cloned-job-details.png[]

. Click **Next** and confirm that the job doesn't return errors. You can ignore warnings about multiple influencers.
. Click **Next**, then **Create job**.
+
The *Start <job name>* window displays.
+
[role="screenshot"]
image::start-job-window.png[]

. Specify when the job begins to analyze anomalies.
. Click **Start**.
+
Results will eventually appear on the Anomaly Explorer page.

[float]
[[define-rule-threshold]]
== Define an anomaly threshold for a job

Certain jobs use a high-count function to look for unusual spikes in 
process events. For some processes, a burst of activity is a normal, such as
automation and housekeeping jobs running on server fleets. However, sometimes a
high-delta event count is unlikely to be the result of routine behavior. In
these cases, you can define a minimum threshold for when a high-event count is
considered an anomaly.

Depending on your anomaly detection results, you may want to set a 
minimum event count threshold for the `packetbeat_dns_tunneling` job:


. In Kibana, go to **Machine Learning** -> **Anomaly Detection** -> **Anomaly Explorer**.
. Navigate to the job results for the `packetbeat_dns_tunneling` job. If the 
job results are not listed, click *Edit job selection* and select 
`packetbeat_dns_tunneling`.
. In the *actions* column, click the gear icon and then select
_Configure rules_.
+
The *Create Rule* window is displayed.
+
[role="screenshot"]
image::ml-rule-threshold.png[]
. Select _Add numeric conditions for when the rule applies_ and the following 
`when` statement:
+
_WHEN actual IS GREATER THAN <X>_
+
Where `<X>` is the threshold above which anomalies are detected.
. Click *Save*.
. To apply the new threshold, rerun the job (*Job Management* -> *Actions* ->
*Start datafeed*).