[[exceptions-api-create-rule-default-exception-item]]
=== Create exceptions for a rule 

Allows you to create exception items that are associated with a specified rule `id`.

==== Request URL

`POST <kibana host>:<port>/api/detection_engine/rules/<id>/exceptions`

//include a tip on how to find a rule's ID

==== Request body

A JSON object with an array of exception items, where each exception item has the <<exceptions-api-create-exception-item,required fields>>. 

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`items` |String | Specify an array of exception list items to create. |Yes 

|==============================================

===== Example requests

[source,console]
--------------------------------------------------
POST api/detection_engine/rules/_bulk_create
{
  "items": [
    {
      "field": "process.name",
      "operator": "included",
      "type": "match",
      "value": "maintenance-job"
    }
  ],
  "list_id": "trusted-linux-processes",
  "name": "Linux maintenance job",
  "namespace_type": "single",
  "tags": [
    "in-house processes",
    "linux"
  ],
  "type": "simple"
}
--------------------------------------------------

==== Response code

`200`::
    Indicates a successful call.

==== Response payload

The returned exception item.

Example response:

[source,json]
--------------------------------------------------
{
  "body": [
    {
          "comments": [],
          "created_by": "elastic",
          "description": "Exception item for rule default exception list",
          "entries": [
            {
              "field": "host.name",
              "operator": "included",
              "type": "match",
              "value": "foo",
            },
          ],
          "name": "Sample exception item",
          "list_id": "e6c44050-c661-11ea-bab5-9d6ae015701b",
          "namespace_type": "single",
          "os_types": [],
          "tags": [],
          "type": "simple",
          "updated_by": "elastic"
        }
  ]
}
--------------------------------------------------
